#ifndef __hial_h
#define __hial_h

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdint.h>

typedef struct NotFound NotFound;

typedef struct Rc_String Rc_String;

typedef struct String String;

typedef struct OwnedValue {
  struct Rc_String _0;
} OwnedValue;

typedef enum Cell_Tag {
  String,
  File,
  Json,
  Toml,
  Yaml,
  Xml,
  Url,
  Http,
  TreeSitter,
} Cell_Tag;

typedef struct Cell {
  Cell_Tag tag;
  union {
    struct {
      struct OwnedValue string;
    };
    struct {
      struct Cell file;
    };
    struct {
      struct Cell json;
    };
    struct {
      struct Cell toml;
    };
    struct {
      struct Cell yaml;
    };
    struct {
      struct Cell xml;
    };
    struct {
      struct Cell url;
    };
    struct {
      struct Cell http;
    };
    struct {
      struct Cell tree_sitter;
    };
  };
} Cell;

typedef enum HErr_Tag {
  Internal,
  NotFound,
  BadArgument,
  BadPath,
  IO,
  Json,
  Toml,
  Yaml,
  Xml,
  Url,
  Http,
  Sitter,
  Other,
} HErr_Tag;

typedef struct IO_Body {
  ErrorKind _0;
  struct String _1;
} IO_Body;

typedef struct HErr {
  HErr_Tag tag;
  union {
    struct {
      struct String internal;
    };
    struct {
      struct NotFound not_found;
    };
    struct {
      struct String bad_argument;
    };
    struct {
      struct String bad_path;
    };
    IO_Body io;
    struct {
      struct String json;
    };
    struct {
      struct String toml;
    };
    struct {
      struct String yaml;
    };
    struct {
      struct String xml;
    };
    struct {
      struct String url;
    };
    struct {
      struct String http;
    };
    struct {
      struct String sitter;
    };
    struct {
      struct String other;
    };
  };
} HErr;

typedef enum CResult_Cell__HErr_Tag {
  Ok_Cell__HErr,
  Err_Cell__HErr,
} CResult_Cell__HErr_Tag;

typedef struct CResult_Cell__HErr {
  CResult_Cell__HErr_Tag tag;
  union {
    struct {
      struct Cell ok;
    };
    struct {
      struct HErr err;
    };
  };
} CResult_Cell__HErr;

extern Language tree_sitter_rust(void);

extern Language tree_sitter_javascript(void);

struct CResult_Cell__HErr cell_str(const char *s);

#endif /* __hial_h */
